<!--
//  Copyright (c) Microsoft Corporation.  All rights reserved.
// 
//  The MIT License (MIT)
// 
//  Permission is hereby granted, free of charge, to any person obtaining a copy
//  of this software and associated documentation files (the "Software"), to deal
//  in the Software without restriction, including without limitation the rights
//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the Software is
//  furnished to do so, subject to the following conditions:
// 
//  The above copyright notice and this permission notice shall be included in
//  all copies or substantial portions of the Software.
// 
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
//  THE SOFTWARE.
-->

<Window x:Class="WPFCaptureSample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WPFCaptureSample" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="WPF Capture Sample" Height="450" Width="800"
        Loaded="Window_Loaded">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Grid x:Name="ControlsGrid" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Margin="10">
                <Button x:Name="PickerButton" Content="Use Picker" Click="PickerButton_Click" Margin="10" />
                <ComboBox x:Name="WindowComboBox" Margin="10" SelectionChanged="WindowComboBox_SelectionChanged">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding MainWindowTitle}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>
            <StackPanel Grid.Row="1" Margin="10,10,10,10">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <xctk:IntegerUpDown x:Name="TopTextBox" Margin="5" Width="50" Text="{Binding Top, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <xctk:IntegerUpDown x:Name="LeftTextBox" Margin="5" Width="50" Text="{Binding Left, UpdateSourceTrigger=PropertyChanged}"/>
                    <Image Source="pack://application:,,,/GridScout;component/Images/arrow.png" 
           Width="24" Height="24" 
           Margin="5" 
           VerticalAlignment="Center" />
                    <xctk:IntegerUpDown x:Name="BottomTextBox" Margin="5" Width="50" Text="{Binding Bottom, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <xctk:IntegerUpDown x:Name="RightTextBox" Margin="5" Width="50" Text="{Binding Right, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>

            </StackPanel>
            <TextBox x:Name="OcrResultsTextBox" 
                     Grid.Row="2" 
                     Margin="10"
                     TextWrapping="Wrap"
                     AcceptsReturn="True"
                     VerticalScrollBarVisibility="Auto"
                     IsReadOnly="True"/>
            <Button x:Name="StopButton" Grid.Row="3" Content="Stop Capturing" Click="StopButton_Click" Margin="10" />
        </Grid>

        <Grid Grid.Column="1" x:Name="CaptureGrid" ScrollViewer.VerticalScrollBarVisibility="Disabled">
            <Canvas x:Name="myCanvas">
                <Image x:Name="CapturedImage" Width="{Binding ActualWidth, ElementName=myCanvas, Mode=OneWay}" Height="{Binding ActualHeight, ElementName=myCanvas, Mode=OneWay}" SizeChanged="CapturedImage_SizeChanged" />
                <Grid x:Name="CaptureGridInner" Width="352" Height="262">
                    <Rectangle x:Name="captureRectangle" StrokeThickness="2" Stroke="Red" />
                    <Rectangle x:Name="dragTopLeft" StrokeThickness="2" Stroke="Red" Width="20" Height="20" HorizontalAlignment="Left" VerticalAlignment="Top" Fill="#59FF0000" Cursor="Hand" />
                    <Rectangle x:Name="dragBottomRight" StrokeThickness="2" Stroke="Red"  Width="20" Height="20" HorizontalAlignment="Right" VerticalAlignment="Bottom" Fill="#59FF0000" Cursor="Hand" />
                </Grid>
            </Canvas>
        </Grid>
    </Grid>
</Window>
